// Code generated by protoc-gen-go. DO NOT EDIT.
// source: synthetic_handler_service.proto

package synthetic

import (
	context "context"
	fmt "fmt"
	v1 "github.com/covarity/echo/api/adapter/model/v1"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for HandleSynthetic method.
type HandleSyntheticRequest struct {
	// Adapter specific handler configuration.
	//
	AdapterConfig        *any.Any `protobuf:"bytes,2,opt,name=adapter_config,json=adapterConfig,proto3" json:"adapter_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleSyntheticRequest) Reset()         { *m = HandleSyntheticRequest{} }
func (m *HandleSyntheticRequest) String() string { return proto.CompactTextString(m) }
func (*HandleSyntheticRequest) ProtoMessage()    {}
func (*HandleSyntheticRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc0835263e92e109, []int{0}
}

func (m *HandleSyntheticRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleSyntheticRequest.Unmarshal(m, b)
}
func (m *HandleSyntheticRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleSyntheticRequest.Marshal(b, m, deterministic)
}
func (m *HandleSyntheticRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleSyntheticRequest.Merge(m, src)
}
func (m *HandleSyntheticRequest) XXX_Size() int {
	return xxx_messageInfo_HandleSyntheticRequest.Size(m)
}
func (m *HandleSyntheticRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleSyntheticRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleSyntheticRequest proto.InternalMessageInfo

func (m *HandleSyntheticRequest) GetAdapterConfig() *any.Any {
	if m != nil {
		return m.AdapterConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*HandleSyntheticRequest)(nil), "synthetic.HandleSyntheticRequest")
}

func init() { proto.RegisterFile("synthetic_handler_service.proto", fileDescriptor_cc0835263e92e109) }

var fileDescriptor_cc0835263e92e109 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0xae, 0xcc, 0x2b,
	0xc9, 0x48, 0x2d, 0xc9, 0x4c, 0x8e, 0xcf, 0x48, 0xcc, 0x4b, 0xc9, 0x49, 0x2d, 0x8a, 0x2f, 0x4e,
	0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x2b, 0x90,
	0x52, 0x4c, 0x4c, 0x49, 0x2c, 0x28, 0x49, 0x2d, 0xd2, 0xcf, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0x2f,
	0x33, 0xd4, 0x4f, 0xad, 0x28, 0x49, 0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0x2b, 0x86, 0xa8, 0x96, 0x92,
	0x4c, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x11, 0x60, 0x3e, 0x98, 0x85, 0x90, 0xca, 0x4f, 0xcf, 0x49,
	0xd5, 0x07, 0xf3, 0x92, 0x4a, 0xd3, 0xf4, 0x13, 0xf3, 0x2a, 0xa1, 0x52, 0x72, 0x18, 0x06, 0x17,
	0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x40, 0xe4, 0x95, 0x42, 0xb9, 0xc4, 0x3c, 0xc0, 0x8e, 0x0b,
	0x86, 0xb9, 0x25, 0x08, 0x22, 0x2f, 0x64, 0xcd, 0xc5, 0x07, 0xd5, 0x1b, 0x9f, 0x9c, 0x9f, 0x97,
	0x96, 0x99, 0x2e, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa2, 0x07, 0xb1, 0x4d, 0x0f, 0x66,
	0x9b, 0x9e, 0x63, 0x5e, 0x65, 0x10, 0x2f, 0x54, 0xad, 0x33, 0x58, 0xa9, 0x51, 0x3e, 0x86, 0xb1,
	0xc1, 0x10, 0xaf, 0x0b, 0x85, 0x72, 0xf1, 0xa3, 0xc9, 0x08, 0x29, 0xea, 0xc1, 0x03, 0x42, 0x0f,
	0xbb, 0x63, 0xa4, 0xe4, 0xf5, 0xa0, 0xe6, 0xeb, 0x81, 0xfd, 0xa1, 0x57, 0x66, 0xa8, 0x07, 0x95,
	0x0a, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x71, 0x52, 0x3c, 0xf1, 0x50, 0x8e, 0xe1, 0xc3, 0x43, 0x39,
	0x86, 0x15, 0x8f, 0xe4, 0x18, 0x7e, 0x5c, 0x7a, 0x32, 0x99, 0x89, 0xa1, 0xe9, 0xee, 0x93, 0xc9,
	0x4c, 0x88, 0x30, 0x4e, 0x62, 0x03, 0x3b, 0xd8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x24, 0x08,
	0xa9, 0xe5, 0x98, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HandleSyntheticServiceClient is the client API for HandleSyntheticService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HandleSyntheticServiceClient interface {
	// HandleTraceSpan is called by Mixer at request-time to deliver 'tracespan' instances to the backend.
	HandleSynthetic(ctx context.Context, in *HandleSyntheticRequest, opts ...grpc.CallOption) (*v1.RequestResult, error)
}

type handleSyntheticServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHandleSyntheticServiceClient(cc grpc.ClientConnInterface) HandleSyntheticServiceClient {
	return &handleSyntheticServiceClient{cc}
}

func (c *handleSyntheticServiceClient) HandleSynthetic(ctx context.Context, in *HandleSyntheticRequest, opts ...grpc.CallOption) (*v1.RequestResult, error) {
	out := new(v1.RequestResult)
	err := c.cc.Invoke(ctx, "/synthetic.HandleSyntheticService/HandleSynthetic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandleSyntheticServiceServer is the server API for HandleSyntheticService service.
type HandleSyntheticServiceServer interface {
	// HandleTraceSpan is called by Mixer at request-time to deliver 'tracespan' instances to the backend.
	HandleSynthetic(context.Context, *HandleSyntheticRequest) (*v1.RequestResult, error)
}

// UnimplementedHandleSyntheticServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHandleSyntheticServiceServer struct {
}

func (*UnimplementedHandleSyntheticServiceServer) HandleSynthetic(ctx context.Context, req *HandleSyntheticRequest) (*v1.RequestResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleSynthetic not implemented")
}

func RegisterHandleSyntheticServiceServer(s *grpc.Server, srv HandleSyntheticServiceServer) {
	s.RegisterService(&_HandleSyntheticService_serviceDesc, srv)
}

func _HandleSyntheticService_HandleSynthetic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleSyntheticRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandleSyntheticServiceServer).HandleSynthetic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synthetic.HandleSyntheticService/HandleSynthetic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandleSyntheticServiceServer).HandleSynthetic(ctx, req.(*HandleSyntheticRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HandleSyntheticService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "synthetic.HandleSyntheticService",
	HandlerType: (*HandleSyntheticServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleSynthetic",
			Handler:    _HandleSyntheticService_HandleSynthetic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "synthetic_handler_service.proto",
}
