// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cfg.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AttributeManifest struct {
	// The revision of this document. Assigned by server.
	Revision string `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	// Name of the component producing these attributes. This can be
	// the proxy (with the canonical name `istio-proxy`) or the name of an
	// `attributes` kind adapter in Mixer.
	Name                 string                                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Attributes           map[string]*AttributeManifest_AttributeInfo `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *AttributeManifest) Reset()         { *m = AttributeManifest{} }
func (m *AttributeManifest) String() string { return proto.CompactTextString(m) }
func (*AttributeManifest) ProtoMessage()    {}
func (*AttributeManifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f81ba022997f8a9d, []int{0}
}

func (m *AttributeManifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttributeManifest.Unmarshal(m, b)
}
func (m *AttributeManifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttributeManifest.Marshal(b, m, deterministic)
}
func (m *AttributeManifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributeManifest.Merge(m, src)
}
func (m *AttributeManifest) XXX_Size() int {
	return xxx_messageInfo_AttributeManifest.Size(m)
}
func (m *AttributeManifest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributeManifest.DiscardUnknown(m)
}

var xxx_messageInfo_AttributeManifest proto.InternalMessageInfo

func (m *AttributeManifest) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *AttributeManifest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AttributeManifest) GetAttributes() map[string]*AttributeManifest_AttributeInfo {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type AttributeManifest_AttributeInfo struct {
	// A human-readable description of the attribute's purpose.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// The type of data carried by this attribute.
	ValueType            ValueType `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=echo.policy.v1alpha1.ValueType" json:"value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AttributeManifest_AttributeInfo) Reset()         { *m = AttributeManifest_AttributeInfo{} }
func (m *AttributeManifest_AttributeInfo) String() string { return proto.CompactTextString(m) }
func (*AttributeManifest_AttributeInfo) ProtoMessage()    {}
func (*AttributeManifest_AttributeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f81ba022997f8a9d, []int{0, 0}
}

func (m *AttributeManifest_AttributeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttributeManifest_AttributeInfo.Unmarshal(m, b)
}
func (m *AttributeManifest_AttributeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttributeManifest_AttributeInfo.Marshal(b, m, deterministic)
}
func (m *AttributeManifest_AttributeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributeManifest_AttributeInfo.Merge(m, src)
}
func (m *AttributeManifest_AttributeInfo) XXX_Size() int {
	return xxx_messageInfo_AttributeManifest_AttributeInfo.Size(m)
}
func (m *AttributeManifest_AttributeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributeManifest_AttributeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AttributeManifest_AttributeInfo proto.InternalMessageInfo

func (m *AttributeManifest_AttributeInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AttributeManifest_AttributeInfo) GetValueType() ValueType {
	if m != nil {
		return m.ValueType
	}
	return ValueType_VALUE_TYPE_UNSPECIFIED
}

type Rule struct {
	// Match is an attribute based predicate. When Mixer receives a
	// request it evaluates the match expression and executes all the associated `actions`
	// if the match evaluates to true.
	//
	// A few example match:
	//
	// * an empty match evaluates to `true`
	// * `true`, a boolean literal; a rule with this match will always be executed
	// * `match(destination.service.host, "ratings.*")` selects any request targeting a service whose
	// name starts with "ratings"
	// * `attr1 == "20" && attr2 == "30"` logical AND, OR, and NOT are also available
	Match string `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	// The actions that will be executed when match evaluates to `true`.
	Actions              []*Action `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_f81ba022997f8a9d, []int{1}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

func (m *Rule) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

type Action struct {
	// Fully qualified name of the handler to invoke.
	// Must match the `name` of a [Handler][istio.policy.v1beta1.Handler.name].
	Handler string `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
	// Each value must match the fully qualified name of the
	// [Instance][istio.policy.v1beta1.Instance.name]s.
	// Referenced instances are evaluated by resolving the attributes/literals for all the fields.
	// The constructed objects are then passed to the `handler` referenced within this action.
	Instances []string `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	// A handle to refer to the results of the action.
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_f81ba022997f8a9d, []int{2}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *Action) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *Action) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Instance struct {
	// The name of this instance
	//
	// Must be unique amongst other Instances in scope. Used by [Action][istio.policy.v1beta1.Action] to refer
	// to an instance produced by this instance.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the compiled in template this instance creates instances for. For referencing non compiled-in
	// templates, use the `template` field instead.
	//
	// The value must match the name of the available template Mixer is built with.
	CompiledTemplate string `protobuf:"bytes,67794676,opt,name=compiled_template,json=compiledTemplate,proto3" json:"compiled_template,omitempty"`
	// The name of the template this instance creates instances for. For referencing compiled-in
	// templates, use the `compiled_template` field instead.
	//
	// The value must match the name of the available template in scope.
	Template string `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	// Depends on referenced template. Struct representation of a
	// proto defined by the template; this varies depending on the value of field `template`.
	Params *_struct.Struct `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	// Defines attribute bindings to map the output of attribute-producing adapters back into
	// the attribute space. The variable `output` refers to the output template instance produced
	// by the adapter.
	// The following example derives `source.namespace` from `source.uid` in the context of Kubernetes:
	// ```yaml
	// params:
	//   # Pass the required attribute data to the adapter
	//   source_uid: source.uid | ""
	// attribute_bindings:
	//   # Fill the new attributes from the adapter produced output
	//   source.namespace: output.source_namespace
	// ```
	AttributeBindings    map[string]string `protobuf:"bytes,4,rep,name=attribute_bindings,json=attributeBindings,proto3" json:"attribute_bindings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_f81ba022997f8a9d, []int{3}
}

func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (m *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(m, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetCompiledTemplate() string {
	if m != nil {
		return m.CompiledTemplate
	}
	return ""
}

func (m *Instance) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Instance) GetParams() *_struct.Struct {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Instance) GetAttributeBindings() map[string]string {
	if m != nil {
		return m.AttributeBindings
	}
	return nil
}

type Handler struct {
	// Must be unique in the entire Mixer configuration. Used by [Actions][istio.policy.v1beta1.Action.handler]
	// to refer to this handler.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the compiled in adapter this handler instantiates. For referencing non compiled-in
	// adapters, use the `adapter` field instead.
	//
	// The value must match the name of the available adapter Mixer is built with. An adapter's name is typically a
	// constant in its code.
	CompiledAdapter string `protobuf:"bytes,67794676,opt,name=compiled_adapter,json=compiledAdapter,proto3" json:"compiled_adapter,omitempty"`
	// The name of a specific adapter implementation. For referencing compiled-in
	// adapters, use the `compiled_adapter` field instead.
	//
	// An adapter's implementation name is typically a constant in its code.
	Adapter string `protobuf:"bytes,2,opt,name=adapter,proto3" json:"adapter,omitempty"`
	// Depends on adapter implementation. Struct representation of a
	// proto defined by the adapter implementation; this varies depending on the value of field `adapter`.
	Params               *_struct.Struct `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Handler) Reset()         { *m = Handler{} }
func (m *Handler) String() string { return proto.CompactTextString(m) }
func (*Handler) ProtoMessage()    {}
func (*Handler) Descriptor() ([]byte, []int) {
	return fileDescriptor_f81ba022997f8a9d, []int{4}
}

func (m *Handler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Handler.Unmarshal(m, b)
}
func (m *Handler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Handler.Marshal(b, m, deterministic)
}
func (m *Handler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Handler.Merge(m, src)
}
func (m *Handler) XXX_Size() int {
	return xxx_messageInfo_Handler.Size(m)
}
func (m *Handler) XXX_DiscardUnknown() {
	xxx_messageInfo_Handler.DiscardUnknown(m)
}

var xxx_messageInfo_Handler proto.InternalMessageInfo

func (m *Handler) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Handler) GetCompiledAdapter() string {
	if m != nil {
		return m.CompiledAdapter
	}
	return ""
}

func (m *Handler) GetAdapter() string {
	if m != nil {
		return m.Adapter
	}
	return ""
}

func (m *Handler) GetParams() *_struct.Struct {
	if m != nil {
		return m.Params
	}
	return nil
}

func init() {
	proto.RegisterType((*AttributeManifest)(nil), "echo.policy.v1alpha1.AttributeManifest")
	proto.RegisterMapType((map[string]*AttributeManifest_AttributeInfo)(nil), "echo.policy.v1alpha1.AttributeManifest.AttributesEntry")
	proto.RegisterType((*AttributeManifest_AttributeInfo)(nil), "echo.policy.v1alpha1.AttributeManifest.AttributeInfo")
	proto.RegisterType((*Rule)(nil), "echo.policy.v1alpha1.Rule")
	proto.RegisterType((*Action)(nil), "echo.policy.v1alpha1.Action")
	proto.RegisterType((*Instance)(nil), "echo.policy.v1alpha1.Instance")
	proto.RegisterMapType((map[string]string)(nil), "echo.policy.v1alpha1.Instance.AttributeBindingsEntry")
	proto.RegisterType((*Handler)(nil), "echo.policy.v1alpha1.Handler")
}

func init() {
	proto.RegisterFile("cfg.proto", fileDescriptor_f81ba022997f8a9d)
}

var fileDescriptor_f81ba022997f8a9d = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0x56, 0x9c, 0xb4, 0x69, 0x4e, 0xf4, 0xff, 0x6d, 0x46, 0x11, 0xb5, 0xac, 0xa2, 0x86, 0xac,
	0xba, 0x40, 0xb6, 0x92, 0x72, 0x13, 0xbb, 0x04, 0x90, 0xa8, 0x10, 0x1b, 0x13, 0x81, 0xc4, 0x82,
	0x68, 0x6c, 0x4f, 0xe2, 0x11, 0xb6, 0xc7, 0xb2, 0xc7, 0x96, 0xfc, 0x14, 0xbc, 0x02, 0x5b, 0x5e,
	0x88, 0x35, 0x2f, 0xc0, 0x8e, 0x07, 0x40, 0x9e, 0x8b, 0x1d, 0x85, 0x44, 0x82, 0xdd, 0x9c, 0x73,
	0xbe, 0x39, 0x97, 0xef, 0x7c, 0x33, 0x30, 0xf0, 0x37, 0x5b, 0x3b, 0xcd, 0x18, 0x67, 0x68, 0x4c,
	0xfc, 0x90, 0xd9, 0x29, 0x8b, 0xa8, 0x5f, 0xd9, 0xe5, 0x0c, 0x47, 0x69, 0x88, 0x67, 0xd6, 0xf5,
	0x96, 0xb1, 0x6d, 0x44, 0x1c, 0x9c, 0x52, 0x67, 0x43, 0x49, 0x14, 0xac, 0x3d, 0x12, 0xe2, 0x92,
	0xb2, 0x4c, 0x5e, 0xb3, 0xae, 0x14, 0x40, 0x58, 0x5e, 0xb1, 0x71, 0x72, 0x9e, 0x15, 0x3e, 0x57,
	0xd1, 0x89, 0xcc, 0xe7, 0xe8, 0x7c, 0x4e, 0x89, 0xa3, 0x82, 0xac, 0x79, 0x95, 0x12, 0x89, 0x98,
	0x7e, 0xe9, 0xc2, 0x68, 0xc1, 0x79, 0x46, 0xbd, 0x82, 0x93, 0xb7, 0x38, 0xa1, 0x1b, 0x92, 0x73,
	0x64, 0xc1, 0x59, 0x46, 0x4a, 0x9a, 0x53, 0x96, 0x98, 0x9d, 0x49, 0xe7, 0x66, 0xe0, 0x36, 0x36,
	0xba, 0x84, 0x5e, 0x82, 0x63, 0x62, 0x1a, 0xb5, 0x7f, 0xd9, 0xfd, 0xb1, 0x30, 0x5c, 0xe1, 0x40,
	0x1f, 0x00, 0xb0, 0xce, 0x94, 0x9b, 0xdd, 0x49, 0xf7, 0x66, 0x38, 0x7f, 0x6a, 0x1f, 0x1a, 0xcb,
	0xfe, 0xa3, 0x62, 0xeb, 0xc9, 0x5f, 0x25, 0x3c, 0xab, 0xdc, 0x9d, 0x54, 0x56, 0x09, 0xff, 0x35,
	0xe1, 0xbb, 0x64, 0xc3, 0xd0, 0x04, 0x86, 0x01, 0xc9, 0xfd, 0x8c, 0xa6, 0xbc, 0xed, 0x70, 0xd7,
	0x85, 0x5e, 0x00, 0xb4, 0xa3, 0x8a, 0x56, 0xff, 0x9f, 0x5f, 0x1f, 0xee, 0xe5, 0x7d, 0x8d, 0x5b,
	0x55, 0x29, 0x91, 0xb3, 0x0c, 0x4a, 0x6d, 0x5b, 0x1c, 0xce, 0xf7, 0xda, 0x42, 0x17, 0xd0, 0xfd,
	0x4c, 0x2a, 0x55, 0xb1, 0x3e, 0xa2, 0x37, 0x70, 0x22, 0x6e, 0x88, 0x22, 0xc3, 0xf9, 0xe3, 0x7f,
	0x1e, 0xb8, 0x9e, 0xc8, 0x95, 0x39, 0x9e, 0x1b, 0xcf, 0x3a, 0xd3, 0x15, 0xf4, 0xdc, 0x22, 0x22,
	0x68, 0x0c, 0x27, 0x31, 0xe6, 0x7e, 0xa8, 0x8a, 0x49, 0x03, 0x3d, 0x81, 0x3e, 0xf6, 0xeb, 0x11,
	0x73, 0xd3, 0x10, 0x0c, 0x5f, 0x1d, 0x29, 0x28, 0x40, 0xae, 0x06, 0x4f, 0x3f, 0xc1, 0xa9, 0x74,
	0xa1, 0xfb, 0xd0, 0x0f, 0x71, 0x12, 0x44, 0x24, 0xdb, 0x5d, 0xa1, 0xf6, 0xa1, 0x07, 0x30, 0xa0,
	0x49, 0xce, 0x71, 0xe2, 0xab, 0x25, 0x2a, 0x40, 0xeb, 0x45, 0x48, 0x29, 0xa0, 0x27, 0x1a, 0x13,
	0xe7, 0xe9, 0x77, 0x03, 0xce, 0xee, 0x14, 0xa2, 0x91, 0x48, 0x67, 0x5f, 0x22, 0xb7, 0x30, 0xf2,
	0x59, 0x9c, 0xd2, 0x88, 0x04, 0x6b, 0x4e, 0xe2, 0x34, 0xc2, 0x9c, 0x98, 0xbf, 0x7e, 0x7e, 0x9b,
	0xb4, 0xc0, 0x0b, 0x0d, 0x58, 0xa9, 0x78, 0x2d, 0xc6, 0x06, 0x6b, 0x48, 0x31, 0x6a, 0x1b, 0x3d,
	0x82, 0xd3, 0x14, 0x67, 0x38, 0xae, 0x5b, 0xad, 0xe9, 0xbf, 0xb4, 0xe5, 0x7b, 0xb0, 0xf5, 0x7b,
	0xb0, 0xdf, 0x89, 0xf7, 0x20, 0x73, 0x2b, 0x2c, 0x0a, 0x00, 0x35, 0xf2, 0x5a, 0x7b, 0x34, 0x09,
	0x68, 0xb2, 0xcd, 0xcd, 0x9e, 0xe0, 0xf3, 0xc8, 0x02, 0xf5, 0x6c, 0xed, 0xde, 0x96, 0xea, 0x9e,
	0xd4, 0xeb, 0x08, 0xef, 0xfb, 0xad, 0x97, 0x70, 0xef, 0x30, 0xf8, 0x80, 0x8a, 0xc6, 0xbb, 0x2a,
	0x1a, 0xec, 0xca, 0xe1, 0x6b, 0x07, 0xfa, 0xaf, 0xd5, 0x6e, 0x8e, 0xf2, 0x3a, 0x83, 0x86, 0xb6,
	0x35, 0x0e, 0x70, 0xca, 0x49, 0xb6, 0x47, 0xeb, 0xb9, 0x8e, 0x2f, 0x64, 0x18, 0x99, 0xd0, 0xd7,
	0x48, 0x59, 0x53, 0x9b, 0xc8, 0xf9, 0x4b, 0x4e, 0x35, 0x9d, 0x4b, 0xfb, 0xe3, 0xc3, 0x2d, 0xe5,
	0x61, 0xe1, 0xd9, 0x3e, 0x8b, 0x1d, 0x9f, 0x95, 0x38, 0xa3, 0xbc, 0x72, 0x6a, 0x1e, 0xc5, 0xc7,
	0xb5, 0xf7, 0x09, 0x79, 0xa7, 0x22, 0xd1, 0xed, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x55,
	0x55, 0x7d, 0xfe, 0x04, 0x00, 0x00,
}
